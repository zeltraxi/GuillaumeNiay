# -*- coding: utf-8 -*-
"""
Created on Fri May 24 03:38:30 2019

@author: Guillaume
"""

import pandas as pd
from random import uniform
import matplotlib.pyplot as plt
from math import exp

#initialize X
X1= [0,1]
X2= [1,1]
X3= [1,0]
X4= [0,0]

#Initialize w
w1 = 0.1
w2 = 0.5
w3 = 0.3
w4 = -0.7
w5 = 0.2
w6 = 0.4


#predicted
d1 = 1
d2 = 1
d3 = 0
d4 = 0

#Adaline

#learning rate
learning_rate=0.5
#function adaline
def backprop(x1,x2,w1,w2,w3,w4,w5,w6,d,error):
    #first layer
    f1 = ((w1*x1)+(w2*x2))
    outf1 = 1/(1+exp(-f1))
    f2 = ((w3*x1)+(w4*x2))
    outf2 = 1/(1+exp(-f2))
    #output layer
    y = ((outf1*w5)+(outf2*w6))
    outy = 1/(1+exp(-y))
    #backpropagation
    deltafinal1 = (d-outy) * outf1
    deltafinal2 = (d-outy) * outf2
    #error = 0.5*((d-outy)**2)
    error = (d-outy)
    #new one
    w5 = w5 + (learning_rate * deltafinal1)
    w6 = w6 + (learning_rate* deltafinal2)
    
    delta1 = (d-outy) * (x1 * w5)
    delta2 = (d-outy) * (x1 * w5)
    delta3 =  (d-outy) * (x1 * w6)
    delta4 =  (d-outy) * (x2 * w6)
    #new inputs hidden layer
    w1 = w1 + (learning_rate * delta1)
    w2 = w2 + (learning_rate * delta2)
    w3 = w3 + (learning_rate * delta3)
    w4 = w4 + (learning_rate * delta4)

        #delta3 = f3 * (y-f3) * ((w4*delta1) + (w3 * delta2))


    return round(w1,3),round(w2,3),round(w3,3),round(w4,3),round(w5,3),round(w6,3),abs(error),round(outy,3)

listerror = [1]
error = 1
i=0
tendance = []
 
for i in range(100):
    w1,w2,w3,w4,w5,w6,error,y = backprop(X1[0],X1[1],w1,w2,w3,w4,w5,w6,d1,error)
    print("Actual",y,"Desired",d1)
    print("W1",w1,"W2",w2,"W3",w3,"W4",w4,"W5",w5,"W6",w6)
    listerror.append(error)
    #tendance.append(abs(listerror[i]-listerror[i-1]))
    w1,w2,w3,w4,w5,w6,error,y = backprop(X2[0],X2[1],w1,w2,w3,w4,w5,w6,d2,error)
    print("Actual",y,"Desired",d2)
    print("W1",w1,"W2",w2,"W3",w3,"W4",w4,"W5",w5,"W6",w6)
    listerror.append(error)
    #tendance.append(abs(listerror[i]-listerror[i-1]))
    w1,w2,w3,w4,w5,w6,error,y = backprop(X3[0],X3[1],w1,w2,w3,w4,w5,w6,d3,error)
    print("Actual",y,"Desired",d3)
    print("W1",w1,"W2",w2,"W3",w3,"W4",w4,"W5",w5,"W6",w6)
    listerror.append(error)
    #tendance.append(abs(listerror[i]-listerror[i-1]))
    w1,w2,w3,w4,w5,w6,error,y= backprop(X4[0],X4[1],w1,w2,w3,w4,w5,w6,d4,error)
    print("Actual",y,"Desired",d4)
    print("W1",w1,"W2",w2,"W3",w3,"W4",w4,"W5",w5,"W6",w6)
    listerror.append(error)
    #tendance.append(abs(listerror[i]-listerror[i-1]))
    print("Pourcentage d'erreur :", round(error*100,4),"% \n")
    
plt.plot(listerror,label="error rate")
#plt.plot(tendance)
plt.xlabel("Number of iteration")
plt.ylabel("Pourcentage of error")
plt.legend()
plt.show()

#print(round(min(listerror),4)*100 ,"%")
