# -*- coding: utf-8 -*-
"""
Created on Mon Mar 25 18:27:24 2019

@author: Guillaume
"""
import matplotlib.pyplot as plt
import random

f,b,c,d,e, sims = [],[],[],[],[], 5000

#ake 5000 iterations
for _ in range(sims):
    # Simulate elections 
    win = random.random()
    if win < 0.25 :
       a = 1
       f.append(a)
    elif win >= 0.25 and win < 0.35:
       a = 3
       b.append(a)
    elif win >= 0.35 and win < 0.5:
       a = 4
       c.append(a)
    elif win >= 0.5 and win < 0.7:
       a = 7
       d.append(a)
    elif win >= 0.7 and win <= 1:
       a = 9
       e.append(a)

# List of probability
numero = [round(len(f)/sims,3),0.25,round(len(b)/sims,3),0.1,round(len(c)/sims,3),0.15,round(len(d)/sims,3),0.2,round(len(e)/sims,3),0.3]
print("Probability of having 1  = {} %".format(numero[0]*100))
print("Probability of having 3 = {} %".format(numero[1]*100))
print("Probability of having 5 = {} %".format(numero[2]*100))
print("Probability of having 7 = {} %".format(numero[3]*100))
print("Probability of having 9 = {} %".format(numero[4]*100))


#labels
labels = '1','3','4','7','9'
#random numbers
practica = [round(len(f)/sims,3),round(len(b)/sims,3),round(len(c)/sims,3),round(len(d)/sims,3),round(len(e)/sims,3)]
#proba number
teoria = [0.25,0.1,0.15,0.2,0.3]

#width 
barWidth = 0.4
r1 = range(len(practica))
r2 = [x + barWidth for x in r1]

#graph
plt.barh(r1, practica, height = barWidth, color = ['blue' for i in practica],
           edgecolor = ['blue' for i in practica], linewidth = 1,align = 'edge')
plt.barh(r2, teoria, height = barWidth, color = ['red' for i in practica],
           edgecolor = ['red' for i in practica], linewidth =1,align = 'edge')
#axis & title
plt.yticks(range(len(practica)), labels)
plt.xlabel('Probabilidad')
plt.ylabel('Nombre')
plt.title('Nombre aleatorio practica (rojo) contro Teoria (azul)')
plt.show()

